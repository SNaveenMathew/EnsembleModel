library(EnsembleModel)
library(EnsembleModel)
library(caret)
library(caretEnsemble)
library(caTools)
library(fpc)
library(plyr)
library(mice)
library(flexclust)
library(readr)
library(EnsembleModel)
options(stringsAsFactors = F)
args <- c()
csat <- 0
compare_full_data_with_blind_data <- F
if(length(args)==2) {
if(args[1]=="csat_cleaning_modeling.R")
csat <- 1
source(args[1])
} else if(length(args)==0) {
source("csat_cleaning_modeling.R")
csat <- 1
compare_full_data_with_blind_data <- T
}
seq(from = 0.95, to = 0.95, by = 0.05)
for(threshold in seq(from = 0.95, to = 0.95, by = 0.05)) {
if(csat==0) {
source(args[2])
} else {
build_csat_model(main_wd, threshold, voice_only_data, voice_variables,
voice_cont_vars, voice_only_blind_data, outcome,
email_only_data, chat_only_data, email_chat_variables,
email_chat_cont_vars, email_only_blind_data,
chat_only_blind_data)
}
}
library(EnsembleModel)
